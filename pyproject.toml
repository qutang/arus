[tool.poetry]
authors = ["qutang <tqshelly@gmail.com>"]
classifiers = [
  "Topic :: Scientific/Engineering :: Human Machine Interfaces",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
description = "Activity Recognition with Ubiquitous Sensing"
documentation = "https://qutang.github.io/arus/"
include = [
  "examples/**/*.py",
  "apps/arus_demo/*.py",
  "apps/arus_demo/*.png",
]
keywords = [
  "ubiquitous computing",
  "activity recognition",
  "sensing",
  "data processing",
  "machine learning",
]
license = "GNU"
name = "arus"
packages = [
  {include = "arus"},
]
readme = "README.md"
repository = "https://github.com/qutang/arus"
version = "1.1.16"

[tool.poetry.dependencies]
dataclasses = {version = "^0.7", python = "~3.6"}
dephell_versioning = {version = "^0.1.2", optional = true}
docopt = "^0.6.2"
joblib = "^0.16.0"
loguru = "^0.5.0"
loky = "^2.6.0"
matplotlib = "^3.1"
numpy = "^1.17"
pandas = "^1.0.0"
pathos = "^0.2.5"
playsound = {version = "^1.2.2", optional = true}
pyarrow = "^1.0.0"
pymetawear = {version = "^0.12.0", optional = true}
pysimplegui = {version = "^4.14.1", optional = true}
python = "^3.7.0"
scikit-learn = "^0.23.2"
scipy = "^1.3"
seaborn = "^0.9.0"
semver = {version = "^2.10.1", optional = true}
tensorboard = {version = "^2.3.0", optional = true}
torch = {version = "^1.6.0", markers = "sys_platform == 'linux'", optional = true}
tqdm = "^4.48.0"
tzlocal = "^2.0.0"
wget = "^3.2"

[tool.poetry.extras]
demo = ["pymetawear", "pysimplegui", 'playsound']
dev = ["dephell_versioning", "semver"]
metawear = ["pymetawear"]
nn = ["torch", "tensorboard"]

[tool.poetry.dev-dependencies]
autopep8 = "^1.4"
codecov = "^2.0"
jupyter = "^1.0.0"
mkapi = "^1.0.11"
mkdocs = "^1.0.4"
mkdocs-git-revision-date-localized-plugin = "^0.7"
mkdocs-material = "^5.2.3"
mkdocs-minify-plugin = "^0.3.0"
pefile = "^2019.4.18"
pygments = "^2.6.1"
pyinstaller = "^4.0"
pylint = "^2.4"
pymdown-extensions = "^8.0"
pytest = "^6.0"
pytest-cov = "^2.8"
pywin32-ctypes = "^0.2.0"
rope = "^0.16.0"
twine = "^3.2.0"

[tool.poetry.scripts]
arus = 'arus.cli:cli'

[tool.pytest.ini_options]
addopts = "-ra"
minversion = "6.0"
testpaths = [
  "arus/tests",
]

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]
