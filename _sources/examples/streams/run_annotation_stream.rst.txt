.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_streams_run_annotation_stream.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_streams_run_annotation_stream.py:


Stream using mhealth annotation files
================================================================================

Imports
----------


.. code-block:: default

    from arus.testing import load_test_data
    import os
    from glob import glob

    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    from arus.core.stream import AnnotationFileSlidingWindowStream








Load test annotation files
---------------------------------
`files` includes more than one file path.


.. code-block:: default


    files, sr = load_test_data(file_type='mhealth',
                               sensor_type='annotation',
                               file_num='multiple',
                               exception_type='no_missing')








Setup stream
---------------
Stream can accept multiple files as the data source and will read them one by one, so users should ensure the files are sorted in order.


.. code-block:: default

    window_size = 12.8
    stream = AnnotationFileSlidingWindowStream(data_source=files,
                                               window_size=window_size,
                                               storage_format='mhealth',
                                               name='annotation-stream')








Start stream and read in data
---------------------------------


.. code-block:: default

    stream.start()
    chunk_sizes = []
    for data, _, _, _, _, name in stream.get_iterator():
        if not data.empty:
            chunk_sizes.append(
                (data.iloc[-1, 2] - data.iloc[0, 1]) / pd.Timedelta(1, 's'))








Stop stream
--------------


.. code-block:: default

    stream.stop()








Plot the stats of the received data
-------------------------------------
The plot shows at many places, the duration of the annotation windows are not as long as the window size. This is normal, because annotations may not fill up the entire window and there are moments covered with no annotations.


.. code-block:: default

    pd.Series(chunk_sizes).plot(
        title='annotation durations of each window in the given stream with \nwindow size of ' + str(window_size) + ' seconds')
    fig = plt.hlines(y=window_size,
                     xmin=0,
                     xmax=len(chunk_sizes),
                     linestyles='dashed')



.. image:: /examples/streams/images/sphx_glr_run_annotation_stream_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.840 seconds)


.. _sphx_glr_download_examples_streams_run_annotation_stream.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: run_annotation_stream.py <run_annotation_stream.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: run_annotation_stream.ipynb <run_annotation_stream.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
